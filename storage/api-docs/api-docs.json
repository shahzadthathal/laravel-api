{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://laravel-api.test",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new user",
                "description": "Create a new user api",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "description": "Login a  user",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategoryList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store a new category",
                "description": "Stores a new category",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "description": "Updates a category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete an existing category",
                "description": "Deletes a category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{postId}/comments": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Store a new comment for a post",
                "description": "Stores a new comment for a post",
                "operationId": "storeCommentForPost",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of the post to add a comment to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "body"
                                ],
                                "properties": {
                                    "body": {
                                        "type": "string",
                                        "example": "This is a comment on a post."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{productId}/comments": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Store a new comment for a product",
                "description": "Stores a new comment for a product",
                "operationId": "storeCommentForProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product to add a comment to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "body"
                                ],
                                "properties": {
                                    "body": {
                                        "type": "string",
                                        "example": "This is a comment on a product."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of posts",
                "description": "Returns list of posts",
                "operationId": "getPostsList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Store a new post",
                "description": "Create a new post",
                "operationId": "storePost",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a specific post by ID",
                "description": "Returns a single post",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "description": "Updates a post and returns the updated post",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "status",
                                    "category_id",
                                    "feature_image_url",
                                    "description"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Post Title"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "feature_image_url": {
                                        "type": "string",
                                        "example": "http://example.com/image.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the post."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete an existing post",
                "description": "Deletes a post and returns a success message",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Post Delete Successful"
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProductsList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store a new product",
                "description": "Create a new product",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product by ID",
                "description": "Returns a single product",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "description": "Updates a product and returns the updated product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "price",
                                    "stock_quantity",
                                    "summary",
                                    "description",
                                    "category_id",
                                    "feature_image_url"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Product Title"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "stock_quantity": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "summary": {
                                        "type": "string",
                                        "example": "Updated summary of the product."
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the product."
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "feature_image_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://example.com/image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete an existing product",
                "description": "Deletes a product and returns a success message",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Product Delete Successful"
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginUserRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "The email of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterUserRequest": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StoreCategoryRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the category",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the category",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StoreCommentRequest": {
                "required": [
                    "body"
                ],
                "properties": {
                    "body": {
                        "description": "The comment body",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StorePostRequest": {
                "title": "Store Post Request",
                "required": [
                    "title",
                    "description"
                ],
                "properties": {
                    "title": {
                        "description": "The title of the post",
                        "type": "string",
                        "example": "Example Post Title"
                    },
                    "feature_image_url": {
                        "description": "URL of the feature image",
                        "type": "string",
                        "example": "http://example.com/feature-image.jpg"
                    },
                    "status": {
                        "description": "Status of the post",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "The category ID associated with the post",
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "description": "The description of the post",
                        "type": "string",
                        "example": "This is an example description of the post."
                    }
                },
                "type": "object"
            },
            "UpdatePostRequest": {
                "title": "Update Post Request",
                "properties": {
                    "title": {
                        "description": "The title of the post",
                        "type": "string",
                        "example": "Updated Post Title"
                    },
                    "feature_image_url": {
                        "description": "URL of the feature image",
                        "type": "string",
                        "example": "http://example.com/updated-feature-image.jpg"
                    },
                    "status": {
                        "description": "Status of the post",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "The category ID associated with the post",
                        "type": "integer",
                        "example": 2
                    },
                    "description": {
                        "description": "The description of the post",
                        "type": "string",
                        "example": "This is an updated description of the post."
                    }
                },
                "type": "object"
            },
            "StoreProductRequest": {
                "title": "StoreProductRequest",
                "description": "Request body for storing a new product",
                "properties": {
                    "title": {
                        "description": "The title of the product",
                        "type": "string",
                        "example": "Product Title"
                    },
                    "price": {
                        "description": "The price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "stock_quantity": {
                        "description": "The stock quantity of the product",
                        "type": "integer",
                        "example": 100
                    },
                    "summary": {
                        "description": "The summary of the product",
                        "type": "string",
                        "example": "Product summary"
                    },
                    "description": {
                        "description": "The description of the product",
                        "type": "string",
                        "example": "Product description"
                    },
                    "category_id": {
                        "description": "The ID of the category associated with the product",
                        "type": "integer",
                        "example": 1
                    },
                    "feature_image_url": {
                        "description": "The feature image URL of the product",
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "UpdateProductRequest": {
                "title": "UpdateProductRequest",
                "description": "Request body for updating an existing product",
                "properties": {
                    "title": {
                        "description": "The updated title of the product",
                        "type": "string",
                        "example": "Updated Product Title"
                    },
                    "price": {
                        "description": "The updated price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 39.99
                    },
                    "stock_quantity": {
                        "description": "The updated stock quantity of the product",
                        "type": "integer",
                        "example": 150
                    },
                    "summary": {
                        "description": "The updated summary of the product",
                        "type": "string",
                        "example": "Updated product summary"
                    },
                    "description": {
                        "description": "The updated description of the product",
                        "type": "string",
                        "example": "Updated product description"
                    },
                    "category_id": {
                        "description": "The updated ID of the category associated with the product",
                        "type": "integer",
                        "example": 2
                    },
                    "feature_image_url": {
                        "description": "The updated feature image URL of the product",
                        "type": "string",
                        "example": "https://example.com/updated_image.jpg"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "The category ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The category name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "required": [
                    "body"
                ],
                "properties": {
                    "id": {
                        "description": "The Comment ID",
                        "type": "integer"
                    },
                    "body": {
                        "description": "The comment body",
                        "type": "string"
                    },
                    "commentable_id": {
                        "description": "The commentable_id associated with the comment i.e. post_id or product_id",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "The time the post was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "The time the post was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post",
                "required": [
                    "title",
                    "slug",
                    "status",
                    "category_id",
                    "category_type"
                ],
                "properties": {
                    "id": {
                        "description": "The post ID",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "The title of the post",
                        "type": "string",
                        "example": "Example Post Title"
                    },
                    "slug": {
                        "description": "The slug of the post",
                        "type": "string",
                        "example": "example-post-title"
                    },
                    "feature_image_url": {
                        "description": "URL of the feature image",
                        "type": "string",
                        "example": "http://example.com/feature-image.jpg"
                    },
                    "status": {
                        "description": "Status of the post",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "The category ID associated with the post",
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "description": "The description of the post",
                        "type": "string",
                        "example": "This is an example description of the post."
                    },
                    "created_at": {
                        "description": "The time the post was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "The time the post was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the product",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "The title of the product",
                        "type": "string",
                        "example": "Product Title"
                    },
                    "slug": {
                        "description": "The slug of the product",
                        "type": "string",
                        "example": "product-title"
                    },
                    "price": {
                        "description": "The price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "stock_quantity": {
                        "description": "The stock quantity of the product",
                        "type": "integer",
                        "example": 100
                    },
                    "summary": {
                        "description": "The summary of the product",
                        "type": "string",
                        "example": "Product summary"
                    },
                    "feature_image_url": {
                        "description": "The feature image URL of the product",
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    },
                    "status": {
                        "description": "The status of the product",
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "description": "The ID of the category associated with the product",
                        "type": "integer",
                        "example": 1
                    },
                    "category_type": {
                        "description": "The type of the category associated with the product",
                        "type": "string",
                        "example": "App\\Models\\Category"
                    },
                    "description": {
                        "description": "The description of the product",
                        "type": "string",
                        "example": "Product description"
                    },
                    "created_at": {
                        "description": "The date and time when the product was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-07 12:00:00"
                    },
                    "updated_at": {
                        "description": "The date and time when the product was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-07 12:00:00"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User email address",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string",
                        "format": "password"
                    },
                    "created_at": {
                        "description": "User creation date and time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User last update date and time",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}